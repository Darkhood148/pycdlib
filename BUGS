1.  Rock Ridge SF (Sparse file) entries don't work for parsing or generation.
2.  Large files (up to 4GB-1) don't work, but should.
3.  Support for UDF.
4.  High-level documentation.
5.  Potentially optimize reshuffle_extents() by rewriting in Cython.
6.  Add a test for proper encoding of Joliet strings.
7.  There is currently a bug with respect to two Rock Ridge entries with the
    same name being relocated at the same level.  It currently "works", but
    produces a bogus ISO.
8.  Add a test for symlink to root.
9.  Implement lazy evaluation.  We can speed up the initial parse of existing
    ISOs by skipping walk_directories and only lazily evaluating the structure
    as we need it.  This would drastically speed things up for read-only
    operations, but wouldn't make much difference for read-write operations.
    Not sure if it is worth the complexity.
10. Add tests to ensure that non-zero length symlinks get dealt with properly
    both for parsing and for writing back out (don't write them out, they have
    bogus data).
11. Add tests to ensure that Rock Ridge CE records are the very last record in
    the Rock Ridge extensions (some OSs, like FreeBSD, doesn't like them if
    they aren't the last one).
12. Potentially optimize all of the loops by storing dot and dotdot separately,
    or implicitly.  Most of the loops in the system skip over these entries,
    so storing them separately would allow us to elide these checks for the
    majority of cases, and only use them when we have to (during
    reshuffle_extents() time, and during write_fp() time).
13. Add a test for Rockridge RR entries in 1.12 version ISOs.  This isn't
    technically allowed by the standard, but we have seen it in the wild, so
    we should have a test to make sure we don't break it.
14. Add a test for "bare" El Torito section entries.  The El Torito standard
    requires that section entries beyond the initial entry all start with a
    section header, but we've seen ISOs in the wild where this isn't the case.
    Add a test to ensure that these entries still work.
15. Refactor the Rock Ridge new() method so that we don't pass everything in
    a single call, but instead call new() to just generate the basic data,
    then call individual methods to set things in it.  That will make the API
    more manageable.
16. Refactor the DirectoryRecord new*() methods so that we don't pass
    everything in a single call, but instead call new() to just generate the
    basic data, then call individual methods to set things in it.  That will
    make the API more manageable.
17. The genisoimage documentation claims it can "hide" files or directories (what
    pycdlib calls "hard linking/unlinking").  Currently, pycdlib only allows
    unlinking files.  We should look into whether we should support this.
18. Add a method to pycdlib to add an entire subdirectory to an ISO.  Having this
    method would allow external users to add whole subdirectories without taking
    the overhead of reshuffle_extents() on every add_file/add_directory.
19. Add a test for when the El Torito boot catalog record is in a Rock Ridge
    Continuation Entry.
20. Add a test for when the El Torito boot catalog record is in a Rock Ridge
    relocated directory record.
21. Add a test for open_fp() where the Joliet little-endian and big-endian PTRs disagree.
22. Add a test for removing an entry from a Joliet ISO where we underflow the PTR.
